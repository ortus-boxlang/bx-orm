{
    "compiler": {
        "classGenerationDirectory": "${java-temp}/boxlangtests"
    },
    "runtime": {
        "mappings": {},
        // This can be more than one location
        "modulesDirectory": [
            "${user-dir}/src/main",
            "${user-dir}/src/test/resources/modules"
        ],
        "datasources": {
            "testDB": {
                "driver": "derby",
                "properties": {
                    "connectionString": "jdbc:derby:memory:testDB;create=true"
                }
            }
        },
        "defaultCache": {
            "evictCount": 1,
            "evictionPolicy": "LRU",
            "freeMemoryPercentageThreshold": 0,
            "maxObjects": 1000,
            "defaultLastAccessTimeout": 30,
            "defaultTimeout": 120,
            "objectStore": "ConcurrentSoftReferenceStore",
            "reapFrequency": 2,
            "resetTimeoutOnAccess": false,
            "useLastAccessTimeouts": true
        },
        "caches": {
			"sessions": {
				"provider": "BoxCacheProvider",
				"properties": {
					"evictCount": 1,
					"evictionPolicy": "LRU",
					"freeMemoryPercentageThreshold": 0,
					// TODO:  2147483647 is the largest integer allowed by Java but the ConcurrentStore will allocate 2147483647/4 as the initial size of the Concurent map and will result in OOM errors
					"maxObjects": 100000,
					"defaultLastAccessTimeout": 3600,
					"defaultTimeout": 3600,
					"objectStore": "ConcurrentStore",
					"reapFrequency": 120,
					"resetTimeoutOnAccess": true,
					"useLastAccessTimeouts": true
				}
			},
            "imports": {
                "provider": "BoxCacheProvider",
                "properties": {
                    "evictCount": 1,
                    "evictionPolicy": "LRU",
                    "freeMemoryPercentageThreshold": 0,
                    "maxObjects": 200,
                    "defaultLastAccessTimeout": 30,
                    "defaultTimeout": 60,
                    "objectStore": "ConcurrentStore",
                    "reapFrequency": 2,
                    "resetTimeoutOnAccess": false,
                    "useLastAccessTimeouts": true
                }
            }
        }
    },
	"modules": {
		"orm": {
			"enabled": true,
			"settings": {
				"datasource": "testDB"
			}
		}
	}
}